import { Topic } from '@/storage/topicStorage';
import { Modal, View, FlatList, TouchableOpacity, Text } from 'react-native';
import { HStack } from '../ui/hstack';
import { Colors } from '@/constants/Colors';

interface TopicItemProps {
  item: Topic;
  onSelect: () => void;
  isSelected: boolean;
}
interface TopicSelectorProps {
  visible: boolean;
  onClose: () => void;
  topics: Topic[];
  selectedCategoryId: string | undefined | null;
  onSelectCategory: (id: string) => void;
}

const TopicItem: React.FC<TopicItemProps> = ({ item, onSelect, isSelected }) => (
  <TouchableOpacity onPress={onSelect} activeOpacity={0.7}>
    <HStack className="items-center gap-3">
      <Text>{item.title}</Text>
    </HStack>
  </TouchableOpacity>
);
const TopicSelector = ({ visible, onClose, topics, selectedCategoryId, onSelectCategory }: TopicSelectorProps) => (
const TopicSelector = ({ visible, onClose, topics, selectedCategoryId, onSelectCategory }: TopicSelectorProps) => (
  <Modal visible={visible} animationType="slide" onRequestClose={onClose} transparent={true}>
    <View style={{
      flex: 1,
      backgroundColor: 'rgba(0,0,0,0.4)', // بک‌گراند نیمه شفاف
      justifyContent: 'center',
      padding: 16,
    }}>
      <View style={{
        backgroundColor: Colors.main.background,
        borderRadius: 12,
        maxHeight: '80%', // حداکثر ارتفاع مودال
        padding: 16,
      }}>
        <FlatList
          data={topics}
          keyExtractor={(item) => item.id}
          renderItem={({ item }) => (
            <TopicItem
              item={item}
              isSelected={selectedCategoryId === item.id}
              onSelect={() => {
                onSelectCategory(item.id);
                onClose();
              }}
            />
          )}
          keyboardShouldPersistTaps="handled"
        />
      </View>
    </View>
  </Modal>
);
);

export default TopicSelector;
